# mostly taken from here:
# https://github.com/actions/create-release/issues/14

name: pyinstaller-build

# Controls when the workflow will run
on:
  push:
    tags:
      - "v*"

jobs:

  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # tag_name: ${{ github.ref }}
          # release_name: Release ${{ github.ref }}
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}

  build_release:
    name: Build Release
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:

          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
                pyinstaller -y --onefile --windowed --add-data pdfs/:pdfs/ --icon icon.ico --hiddenimport=babel.numbers --hiddenimport=yaml Scheintool.py &&
                cd dist/ &&
                zip -r9 Scheintool Scheintool.app/
            OUT_FILE_NAME: Scheintool.zip
            ASSET_MIME: application/zip

          - os: ubuntu-latest
            TARGET: ubuntu
            CMD_BUILD: >
                pyinstaller -y --onefile --windowed --add-data pdfs/:pdfs/ --icon icon.ico --hiddenimport=babel.numbers --hiddenimport=yaml Scheintool.py &&
            OUT_FILE_NAME: Scheintool
            ASSET_MIME: application/x-executable
            
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller -F -w -n clipster -i resources/clipster.ico cli.py
            OUT_FILE_NAME: Scheintool.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: scheintool-env
          environment-file: environment.yml
          python-version: 3.8
          auto-activate-base: true

      - name: Build with pyinstaller for ${{matrix.TARGET}}
        run: ${{matrix.CMD_BUILD}}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
          asset_name: ${{ matrix.OUT_FILE_NAME}}
          asset_content_type: ${{ matrix.ASSET_MIME}}